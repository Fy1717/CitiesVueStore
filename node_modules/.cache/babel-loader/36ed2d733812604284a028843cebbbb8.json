{"remainingRequest":"C:\\Users\\Lenovo\\OneDrive\\Desktop\\VueProject\\onedio-project\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Lenovo\\OneDrive\\Desktop\\VueProject\\onedio-project\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Lenovo\\OneDrive\\Desktop\\VueProject\\onedio-project\\src\\store\\store.js","dependencies":[{"path":"C:\\Users\\Lenovo\\OneDrive\\Desktop\\VueProject\\onedio-project\\src\\store\\store.js","mtime":1619375126878},{"path":"C:\\Users\\Lenovo\\OneDrive\\Desktop\\VueProject\\onedio-project\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Lenovo\\OneDrive\\Desktop\\VueProject\\onedio-project\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Lenovo\\OneDrive\\Desktop\\VueProject\\onedio-project\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL0xlbm92by9PbmVEcml2ZS9EZXNrdG9wL1Z1ZVByb2plY3Qvb25lZGlvLXByb2plY3Qvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIudG8tZml4ZWQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcy5qcyI7CmltcG9ydCB7IGNyZWF0ZVN0b3JlIH0gZnJvbSAndnVleCc7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CnZhciBzdG9yZSA9IGNyZWF0ZVN0b3JlKHsKICBzdGF0ZTogewogICAgY2l0aWVzTGlzdDogW10sCiAgICBzZWFyY2hUZXh0OiAnJywKICAgIGN1cnJlbnRQcm9kdWN0OiB7CiAgICAgIGlkOiAxLAogICAgICBpbWc6ICdodHRwczovL2QxM2sxM3dqNmFkZmRmLmNsb3VkZnJvbnQubmV0L3VyYmFuX2FyZWFzL3JvbWVfd2ViLTMwZTE2MTA0MjguanBnJywKICAgICAgdGVtcGVyYXR1cmU6ICcyOCcsCiAgICAgIG5hbWU6ICdBTktBUkEnLAogICAgICBwb3B1bGF0aW9uOiAnMjg4NzQzJywKICAgICAgbGF0aXR1ZGU6ICdsYXRpdHVkZScKICAgIH0KICB9LAogIGdldHRlcnM6IHsKICAgIGFsbENpdGllczogZnVuY3Rpb24gYWxsQ2l0aWVzKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5jaXRpZXNMaXN0OwogICAgfSwKICAgIGdldHRlclNlYXJjaFRleHQ6IGZ1bmN0aW9uIGdldHRlclNlYXJjaFRleHQoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnNlYXJjaFRleHQ7CiAgICB9LAogICAgZ2V0dGVyQ3VycmVudFByb2R1Y3Q6IGZ1bmN0aW9uIGdldHRlckN1cnJlbnRQcm9kdWN0KHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5jdXJyZW50UHJvZHVjdDsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIGdldExpc3RPZkNpdGllczogZnVuY3Rpb24gZ2V0TGlzdE9mQ2l0aWVzKF9yZWYpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgc3RhdGUsIGNvbW1pdCwgY2l0aWVzTGlzdEZyb21BcGksIGNpdGllc1Jlc3BvbnNlLCBjaXR5T2JqZWN0OwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIHN0YXRlID0gX3JlZi5zdGF0ZSwgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgICAgICAgICAgICBjaXRpZXNMaXN0RnJvbUFwaSA9IFtdOwogICAgICAgICAgICAgICAgY2l0aWVzUmVzcG9uc2UgPSBbXTsKICAgICAgICAgICAgICAgIGNpdHlPYmplY3QgPSB7fTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA2OwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldCgnaHR0cDovL2FwaS5nZW9uYW1lcy5vcmcvY2l0aWVzSlNPTj9ub3J0aD00MiZzb3V0aD0zNiZlYXN0PTI2Jndlc3Q9NDUmbGFuZz10ciZ1c2VybmFtZT1meTE3MTcnKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICAgICAgICBjaXRpZXNSZXNwb25zZSA9ICgocmVzcG9uc2UgfHwge30pLmRhdGEgfHwge30pLmdlb25hbWVzIHx8IFtdOwogICAgICAgICAgICAgICAgICBjaXR5T2JqZWN0ID0ge307CiAgICAgICAgICAgICAgICAgIGNpdGllc1Jlc3BvbnNlLm1hcChmdW5jdGlvbiAoY2l0eSkgewogICAgICAgICAgICAgICAgICAgIGNpdHlPYmplY3QgPSB7CiAgICAgICAgICAgICAgICAgICAgICBpZDogY2l0eS5nZW9uYW1lSWQgfHwgMCwKICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IGNpdHkubmFtZSB8fCAnJywKICAgICAgICAgICAgICAgICAgICAgIHBvcHVsYXRpb246IGNpdHkucG9wdWxhdGlvbiB8fCAwLAogICAgICAgICAgICAgICAgICAgICAgbGF0aXR1ZGU6IChjaXR5LmxhdCB8fCAwKS50b0ZpeGVkKDMpLAogICAgICAgICAgICAgICAgICAgICAgdGVtcGVyYXR1cmU6ICcyNScsCiAgICAgICAgICAgICAgICAgICAgICBpbWc6ICdodHRwczovL2ltYWdlLmFycml2YWxndWlkZXMuY29tLzE1MDB4NjAwLzA5L2FhYWZlMmFjZGRkM2Y1N2IxOGUzNGY4MzgyZDk3MjFiLmpwZycKICAgICAgICAgICAgICAgICAgICB9OwoKICAgICAgICAgICAgICAgICAgICBpZiAoY2l0eU9iamVjdC5uYW1lICYmIGNpdHkubmFtZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHN0YXRlLnNlYXJjaFRleHQudG9Mb3dlckNhc2UoKSkpIHsKICAgICAgICAgICAgICAgICAgICAgIGNpdGllc0xpc3RGcm9tQXBpLnB1c2goY2l0eU9iamVjdCk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0FDVElPTlMgT04gU1RPUkUgLS0+ICcsIGNpdGllc0xpc3RGcm9tQXBpKTsKICAgICAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgY29tbWl0KCdTZXRDaXRpZXMnLCBjaXRpZXNMaXN0RnJvbUFwaSk7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0KICB9LAogIG11dGF0aW9uczogewogICAgU2V0Q2l0aWVzOiBmdW5jdGlvbiBTZXRDaXRpZXMoc3RhdGUsIGNpdGllc0xpc3RGcm9tQXBpKSB7CiAgICAgIHN0YXRlLmNpdGllc0xpc3QgPSBjaXRpZXNMaXN0RnJvbUFwaTsKICAgIH0sCiAgICBTZXRTZWFyY2hLZXl3b3JkOiBmdW5jdGlvbiBTZXRTZWFyY2hLZXl3b3JkKHN0YXRlLCBuZXdLZXl3b3JkKSB7CiAgICAgIHN0YXRlLnNlYXJjaFRleHQgPSBuZXdLZXl3b3JkOwogICAgfQogIH0KfSk7CmV4cG9ydCBkZWZhdWx0IHN0b3JlOw=="},{"version":3,"sources":["C:/Users/Lenovo/OneDrive/Desktop/VueProject/onedio-project/src/store/store.js"],"names":["createStore","axios","store","state","citiesList","searchText","currentProduct","id","img","temperature","name","population","latitude","getters","allCities","getterSearchText","getterCurrentProduct","actions","getListOfCities","commit","citiesListFromApi","citiesResponse","cityObject","get","then","response","data","geonames","map","city","geonameId","lat","toFixed","toLowerCase","includes","push","console","log","catch","error","mutations","SetCities","SetSearchKeyword","newKeyword"],"mappings":"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","sourcesContent":["import { createStore } from 'vuex';\r\nimport axios from 'axios';\r\n\r\nconst store = createStore({\r\n    state: {\r\n        citiesList: [],\r\n        searchText: '',\r\n        currentProduct: {\r\n            id: 1,\r\n            img: 'https://d13k13wj6adfdf.cloudfront.net/urban_areas/rome_web-30e1610428.jpg',\r\n            temperature: '28',\r\n            name: 'ANKARA',\r\n            population: '288743',\r\n            latitude: 'latitude'\r\n        }\r\n    },\r\n    getters: {\r\n        allCities: (state) => state.citiesList,\r\n        getterSearchText: (state) => state.searchText,\r\n        getterCurrentProduct: (state) => state.currentProduct,\r\n    },\r\n    actions: {\r\n       async getListOfCities({ state, commit }) {\r\n            var citiesListFromApi = [];\r\n            var citiesResponse = [];\r\n            var cityObject = {};\r\n\r\n            await axios.get('http://api.geonames.org/citiesJSON?north=42&south=36&east=26&west=45&lang=tr&username=fy1717')\r\n                .then(response => {\r\n                    citiesResponse = ((response || {}).data || {}).geonames || [];\r\n                    cityObject = {};\r\n            \r\n                    citiesResponse.map((city) => {\r\n                        cityObject = {\r\n                            id: city.geonameId || 0,\r\n                            name: city.name || '',\r\n                            population: city.population || 0, \r\n                            latitude: (city.lat || 0).toFixed(3),\r\n                            temperature: '25',\r\n                            img: 'https://image.arrivalguides.com/1500x600/09/aaafe2acddd3f57b18e34f8382d9721b.jpg'\r\n                        };\r\n                        \r\n                        if (cityObject.name && city.name.toLowerCase().includes(state.searchText.toLowerCase())) {\r\n                            citiesListFromApi.push(cityObject);\r\n                        }\r\n                    });\r\n            \r\n                    console.log('ACTIONS ON STORE --> ', citiesListFromApi); \r\n                }).catch (error => {\r\n                    console.log(error);\r\n                }); \r\n            \r\n            commit('SetCities', citiesListFromApi)\r\n        } \r\n    },\r\n    mutations: {\r\n        SetCities(state, citiesListFromApi) {\r\n            state.citiesList = citiesListFromApi\r\n        },\r\n        SetSearchKeyword(state, newKeyword) {\r\n            state.searchText = newKeyword;\r\n        }\r\n    },\r\n})\r\n\r\nexport default store"]}]}